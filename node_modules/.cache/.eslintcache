[{"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/service-worker.ts":"1","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/index.tsx":"2","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/reportWebVitals.ts":"3","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/serviceWorkerRegistration.ts":"4","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/App.tsx":"5","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/lib/localStorage.ts":"6","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/constants/strings.ts":"7","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/lib/stats.ts":"8","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/lib/nerdexp.ts":"9","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/constants/settings.ts":"10","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/alerts/Alert.tsx":"11","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/modals/AboutModal.tsx":"12","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/keyboard/Keyboard.tsx":"13","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/grid/Grid.tsx":"14","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/modals/InfoModal.tsx":"15","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/lib/statuses.ts":"16","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/modals/BaseModal.tsx":"17","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/grid/CompletedRow.tsx":"18","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/keyboard/Key.tsx":"19","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/grid/CurrentRow.tsx":"20","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/grid/EmptyRow.tsx":"21","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/grid/Cell.tsx":"22","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/modals/StatsModal.tsx":"23","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/stats/Histogram.tsx":"24","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/stats/StatBar.tsx":"25","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/constants/wordlist.ts":"26","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/constants/validGuesses.ts":"27","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/stats/Progress.tsx":"28"},{"size":2968,"mtime":1645332183701,"results":"29","hashOfConfig":"30"},{"size":816,"mtime":1645338808968,"results":"31","hashOfConfig":"30"},{"size":425,"mtime":1645332183701,"results":"32","hashOfConfig":"30"},{"size":5256,"mtime":1645332183702,"results":"33","hashOfConfig":"30"},{"size":7287,"mtime":1645342306831,"results":"34","hashOfConfig":"30"},{"size":907,"mtime":1645307781913,"results":"35","hashOfConfig":"30"},{"size":937,"mtime":1645306899236,"results":"36","hashOfConfig":"30"},{"size":1286,"mtime":1644688852428,"results":"37","hashOfConfig":"30"},{"size":1649,"mtime":1645307605771,"results":"38","hashOfConfig":"30"},{"size":208,"mtime":1644773178775,"results":"39","hashOfConfig":"30"},{"size":1135,"mtime":1644688852000,"results":"40","hashOfConfig":"30"},{"size":674,"mtime":1645332535000,"results":"41","hashOfConfig":"30"},{"size":3216,"mtime":1645297236000,"results":"42","hashOfConfig":"30"},{"size":864,"mtime":1644688852000,"results":"43","hashOfConfig":"30"},{"size":1888,"mtime":1645296346000,"results":"44","hashOfConfig":"30"},{"size":1805,"mtime":1645308503297,"results":"45","hashOfConfig":"30"},{"size":2709,"mtime":1644688852000,"results":"46","hashOfConfig":"30"},{"size":561,"mtime":1644688852000,"results":"47","hashOfConfig":"30"},{"size":1489,"mtime":1644688852000,"results":"48","hashOfConfig":"30"},{"size":521,"mtime":1644688852000,"results":"49","hashOfConfig":"30"},{"size":323,"mtime":1644688852000,"results":"50","hashOfConfig":"30"},{"size":1431,"mtime":1644688852000,"results":"51","hashOfConfig":"30"},{"size":1189,"mtime":1645341508022,"results":"52","hashOfConfig":"30"},{"size":579,"mtime":1644688852000,"results":"53","hashOfConfig":"30"},{"size":949,"mtime":1644688852000,"results":"54","hashOfConfig":"30"},{"size":274,"mtime":1645193524191,"results":"55","hashOfConfig":"30"},{"size":142725,"mtime":1644688852427,"results":"56","hashOfConfig":"30"},{"size":534,"mtime":1644688852000,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1801rq5",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/service-worker.ts",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/index.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/reportWebVitals.ts",[],[],["147","148"],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/serviceWorkerRegistration.ts",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/App.tsx",["149","150","151","152","153","154","155","156","157","158"],[],"import React, { lazy, Suspense } from \"react\";\n\nimport {\n  InformationCircleIcon,\n  ChartBarIcon,\n  CogIcon,\n} from '@heroicons/react/outline'\n\nimport { useState, useEffect } from 'react'\nimport { Alert } from './components/alerts/Alert'\nimport { Grid } from './components/grid/Grid'\nimport { Keyboard } from './components/keyboard/Keyboard'\nimport { AboutModal } from './components/modals/AboutModal'\nimport { InfoModal } from './components/modals/InfoModal'\nimport { StatsModal } from './components/modals/StatsModal'\n\nimport {\n  GAME_TITLE,\n  WIN_MESSAGES,\n  GAME_COPIED_MESSAGE,\n  ABOUT_GAME_MESSAGE,\n  NOT_ENOUGH_LETTERS_MESSAGE,\n  WORD_NOT_FOUND_MESSAGE,\n  CORRECT_WORD_MESSAGE,\n} from './constants/strings'\nimport {\n  MAX_WORD_LENGTH,\n  MAX_CHALLENGES,\n  ALERT_TIME_MS,\n  REVEAL_TIME_MS,\n  GAME_LOST_INFO_DELAY,\n} from './constants/settings'\n\nimport {\n   isInputExpComputable,\n   isWinningExp,\n   esolution,\n} from './lib/nerdexp'\nimport { addStatsForCompletedGame, loadStats } from './lib/stats'\nimport {\n  loadGameStateFromLocalStorage,\n  saveGameStateToLocalStorage,\n} from './lib/localStorage'\n\nimport './App.css'\n\nfunction App() {\n\n  const prefersDarkMode = window.matchMedia(\n    '(prefers-color-scheme: dark)'\n  ).matches\n\n\n\n\n  const [currentGuess, setCurrentGuess] = useState('')\n  const [isGameWon, setIsGameWon] = useState(false)\n  const [isInfoModalOpen, setIsInfoModalOpen] = useState(false)\n  const [isAboutModalOpen, setIsAboutModalOpen] = useState(false)\n  const [isNotEnoughLetters, setIsNotEnoughLetters] = useState(false)\n  const [isStatsModalOpen, setIsStatsModalOpen] = useState(false)\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false)\n  const [isWordNotFoundAlertOpen, setIsWordNotFoundAlertOpen] = useState(false)\n  const [isGameLost, setIsGameLost] = useState(false)\n  const [isDarkMode, setIsDarkMode] = useState(\n    localStorage.getItem('theme')\n      ? localStorage.getItem('theme') === 'dark'\n      : prefersDarkMode\n      ? true\n      : false\n  )\n  const [successAlert, setSuccessAlert] = useState('')\n  const [isRevealing, setIsRevealing] = useState(false)\n  const [guesses, setGuesses] = useState<string[]>(() => {\n    const loaded = loadGameStateFromLocalStorage()\n    if (loaded?.esolution !== esolution) {\n      return []\n    }\n    const gameWasWon = loaded.guesses.includes(esolution)\n    if (gameWasWon) {\n      setIsGameWon(true)\n    }\n    if (loaded.guesses.length === MAX_CHALLENGES && !gameWasWon) {\n      setIsGameLost(true)\n    }\n    return loaded.guesses\n  })\n\n  const [stats, setStats] = useState(() => loadStats())\n\n  const [isMissingPreviousLetters, setIsMissingPreviousLetters] =\n    useState(false)\n  const [missingLetterMessage, setIsMissingLetterMessage] = useState('')\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n    }\n  }, [isDarkMode])\n\n  const handleDarkMode = (isDark: boolean) => {\n    setIsDarkMode(isDark)\n    localStorage.setItem('theme', isDark ? 'dark' : 'light')\n  }\n\n  useEffect(() => {\n    saveGameStateToLocalStorage({ guesses, esolution })\n  }, [guesses])\n\n  useEffect(() => {\n    if (isGameWon) {\n      setTimeout(() => {\n        setSuccessAlert(\n          WIN_MESSAGES[Math.floor(Math.random() * WIN_MESSAGES.length)]\n        )\n\n        setTimeout(() => {\n          setSuccessAlert('')\n          setIsStatsModalOpen(true)\n        }, ALERT_TIME_MS)\n      }, REVEAL_TIME_MS * MAX_WORD_LENGTH)\n    }\n    if (isGameLost) {\n      setTimeout(() => {\n         setIsStatsModalOpen(true)\n      }, GAME_LOST_INFO_DELAY)\n    }\n  }, [isGameWon, isGameLost])\n\n  const onChar = (value: string) => {\n    if (\n      currentGuess.length < MAX_WORD_LENGTH &&\n      guesses.length < MAX_CHALLENGES &&\n      !isGameWon\n    ) {\n      setCurrentGuess(`${currentGuess}${value}`)\n    }\n  }\n\n  const onDelete = () => {\n    setCurrentGuess(currentGuess.slice(0, -1))\n  }\n\n  const onEnter = () => {\n      if (isGameWon || isGameLost) {\n      return\n    }\n\n    if (!(currentGuess.length === MAX_WORD_LENGTH)) {\n      setIsNotEnoughLetters(true)\n      return setTimeout(() => {\n        setIsNotEnoughLetters(false)\n      }, ALERT_TIME_MS)\n    }\n\n\n    if (!isInputExpComputable(currentGuess)) {\n      setIsWordNotFoundAlertOpen(true)\n      return setTimeout(() => {\n        setIsWordNotFoundAlertOpen(false)\n      }, ALERT_TIME_MS)\n    }\n\n\n    setIsRevealing(true)\n    // turn this back off after all\n    // chars have been revealed\n    setTimeout(() => {\n      setIsRevealing(false)\n    }, REVEAL_TIME_MS * MAX_WORD_LENGTH)\n\n    const winningWord = isWinningExp(currentGuess)\n\n    if (\n      currentGuess.length === MAX_WORD_LENGTH &&\n      guesses.length < MAX_CHALLENGES &&\n      !isGameWon\n    ) {\n      setGuesses([...guesses, currentGuess])\n      setCurrentGuess('')\n\n      if (winningWord) {\n        setStats(addStatsForCompletedGame(stats, guesses.length))\n        return setIsGameWon(true)\n      }\n\n\n      if (guesses.length === MAX_CHALLENGES - 1) {\n        setStats(addStatsForCompletedGame(stats, guesses.length + 1))\n        setIsGameLost(true)\n      }\n\n    }\n  }\n\n  return (\n    <div className=\"pt-2 pb-8 max-w-7xl mx-auto sm:px-6 lg:px-8\">\n      <div className=\"flex w-80 mx-auto items-center mb-8 mt-20\">\n        <h1 className=\"text-xl ml-2.5 grow font-bold dark:text-white\">\n          {GAME_TITLE}\n        </h1>\n        <InformationCircleIcon\n          className=\"h-6 w-6 mr-2 cursor-pointer dark:stroke-white\"\n          onClick={() => setIsInfoModalOpen(true)}\n        />\n\n      </div>\n      <Grid\n        guesses={guesses}\n        currentGuess={currentGuess}\n        isRevealing={isRevealing}\n      />\n      <Keyboard\n        onChar={onChar}\n        onDelete={onDelete}\n        onEnter={onEnter}\n        guesses={guesses}\n        isRevealing={isRevealing}\n      />\n      <InfoModal\n        isOpen={isInfoModalOpen}\n        handleClose={() => setIsInfoModalOpen(false)}\n      />\n\n      <StatsModal\n        isOpen={isStatsModalOpen}\n        handleClose={() => setIsStatsModalOpen(false)}\n        guesses={guesses}\n        gameStats={stats}\n        isGameLost={isGameLost}\n        isGameWon={isGameWon}\n      />\n\n      <AboutModal\n        isOpen={isAboutModalOpen}\n        handleClose={() => setIsAboutModalOpen(false)}\n      />\n\n      <button\n        type=\"button\"\n        className=\"mx-auto mt-8 flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 select-none\"\n        onClick={() => setIsAboutModalOpen(true)}\n      >\n        {ABOUT_GAME_MESSAGE}\n      </button>\n\n      <Alert message={NOT_ENOUGH_LETTERS_MESSAGE} isOpen={isNotEnoughLetters} />\n      <Alert\n        message={WORD_NOT_FOUND_MESSAGE}\n        isOpen={isWordNotFoundAlertOpen}\n      />\n      <Alert message={missingLetterMessage} isOpen={isMissingPreviousLetters} />\n      <Alert\n        message={CORRECT_WORD_MESSAGE(esolution)}\n        isOpen={isGameLost && !isRevealing}\n      />\n      <Alert\n        message={successAlert}\n        isOpen={successAlert !== ''}\n        variant=\"success\"\n        topMost={true}\n      />\n    </div>\n  )\n}\n\nexport default App\n","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/lib/localStorage.ts",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/constants/strings.ts",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/lib/stats.ts",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/lib/nerdexp.ts",["159","160","161","162","163","164","165","166","167","168","169"],[],"import { generateExpression } from \"math-expression-generator\";\n\n\nexport const isInputExpComputable = (exp: string) => {\n    var tokenList1 = [];\n    var tokenList2 = [];\n    var token = \"\";\n    var op = \"\";\n    for (var i = 0; i < exp.length; ++i) {\n        if ((exp[i]=='+')||(exp[i]=='-')||(exp[i]=='*')||(exp[i]=='/')||(exp[i]=='=')) {\n            tokenList1.push(token);\n            token = \"\";\n            op = exp[i];\n            if(op != \"=\")\n            tokenList1.push(op);\n        } else {\n            token += exp[i];\n        }\n    }\n    tokenList2.push(token);\n    var comExp = eval(tokenList1.join(\" \"));\n\n    if(comExp == tokenList2)\n      return true\n    else\n      return false\n}\n\nexport const isWinningExp = (exp: string) => {\n  return esolution === exp\n}\n\nexport const getProblem = () => {\n  // January 1, 2022 Game Epoch\n  const epochMs = new Date('January 1, 2022 00:00:00').valueOf()\n  const now = Date.now()\n  const msInDay = 1 //86400000\n  const index = Math.floor((now - epochMs) / msInDay)\n  const nextday = (index + 1) * msInDay + epochMs\n\n    var restr  = ''\n    while(restr.length != 8){\n    const expression = generateExpression({\n    target : Math.floor(Math.random() * (99 - 10 + 1) + 10),\n    length: 2,\n   });\n   var expLen = (expression[0].toString()).length + 1 + (expression[2].toString()).length;\n   const result = eval(expression.join(\" \"));\n\n    restr = expression[0].toString() + expression[1] + expression[2].toString() + \"=\" + result.toString();\n\n}\n  return {\n    esolution : restr,\n    solutionIndex: index,\n    tomorrow: nextday,\n  }\n}\n\nexport const { esolution, solutionIndex, tomorrow } = getProblem()\n","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/constants/settings.ts",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/alerts/Alert.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/modals/AboutModal.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/keyboard/Keyboard.tsx",["170","171","172","173","174"],[],"import { getStatuses } from '../../lib/statuses'\nimport { Key } from './Key'\nimport { useEffect } from 'react'\nimport { ENTER_TEXT, DELETE_TEXT } from '../../constants/strings'\n\ntype Props = {\n  onChar: (value: string) => void\n  onDelete: () => void\n  onEnter: () => void\n  guesses: string[]\n  isRevealing?: boolean\n}\n\nexport const Keyboard = ({\n  onChar,\n  onDelete,\n  onEnter,\n  guesses,\n  isRevealing,\n}: Props) => {\n  const charStatuses = getStatuses(guesses)\n\n  const onClick = (value: string) => {\n    if (value === 'ENTER') {\n      onEnter()\n    } else if (value === 'DELETE') {\n      onDelete()\n    } else {\n      onChar(value)\n    }\n  }\n\n  useEffect(() => {\n    const listener = (e: KeyboardEvent) => {\n      if (e.code === 'Enter') {\n        onEnter()\n      } else if (e.code === 'Backspace') {\n        onDelete()\n      } else {\n        const key = e.key.toUpperCase()\n        if (key.length === 1 && ((key >= '0' && key <= '9') || (key == '+') || (key == '-') || (key == '*') || (key == '/') || (key == '='))) {\n          onChar(key)\n        }\n      }\n    }\n    window.addEventListener('keyup', listener)\n    return () => {\n      window.removeEventListener('keyup', listener)\n    }\n  }, [onEnter, onDelete, onChar])\n\n  return (\n    <div>\n    <div className=\"flex justify-center mb-1\">\n      {['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'].map((key) => (\n        <Key\n          value={key}\n          key={key}\n          onClick={onClick}\n          status={charStatuses[key]}\n          isRevealing={isRevealing}\n        />\n      ))}\n    </div>\n    <div className=\"flex justify-center mb-1\">\n    <Key width={65.4} value=\"ENTER\" onClick={onClick}>\n      {ENTER_TEXT}\n    </Key>\n      {['+', '-', '*', '/', '='].map((key) => (\n        <Key\n          value={key}\n          key={key}\n          onClick={onClick}\n          status={charStatuses[key]}\n          isRevealing={isRevealing}\n        />\n      ))}\n      <Key width={65.4} value=\"DELETE\" onClick={onClick}>\n        {DELETE_TEXT}\n      </Key>\n    </div>\n    {/*\n      <div className=\"flex justify-center mb-1\">\n        {['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n      </div>\n      <div className=\"flex justify-center mb-1\">\n        {['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n      </div>\n\n      <div className=\"flex justify-center\">\n        <Key width={65.4} value=\"ENTER\" onClick={onClick}>\n          {ENTER_TEXT}\n        </Key>\n\n        {['Z', 'X', 'C', 'V', 'B', 'N', 'M'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n        <Key width={65.4} value=\"DELETE\" onClick={onClick}>\n          {DELETE_TEXT}\n        </Key>\n      </div>\n      */}\n    </div>\n  )\n}\n","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/grid/Grid.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/modals/InfoModal.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/lib/statuses.ts",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/modals/BaseModal.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/grid/CompletedRow.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/keyboard/Key.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/grid/CurrentRow.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/grid/EmptyRow.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/grid/Cell.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/modals/StatsModal.tsx",["175","176"],[],"import Countdown from 'react-countdown'\nimport { StatBar } from '../stats/StatBar'\nimport { Histogram } from '../stats/Histogram'\nimport { GameStats } from '../../lib/localStorage'\nimport { BaseModal } from './BaseModal'\nimport {\n  STATISTICS_TITLE,\n  GUESS_DISTRIBUTION_TEXT,\n  NEW_WORD_TEXT,\n} from '../../constants/strings'\n\ntype Props = {\n  isOpen: boolean\n  handleClose: () => void\n  guesses: string[]\n  gameStats: GameStats\n  isGameLost: boolean\n  isGameWon: boolean\n}\n\nexport const StatsModal = ({\n  isOpen,\n  handleClose,\n  guesses,\n  gameStats,\n  isGameLost,\n  isGameWon,\n}: Props) => {\n  if (gameStats.totalGames <= 0) {\n    return (\n      <BaseModal\n        title={STATISTICS_TITLE}\n        isOpen={isOpen}\n        handleClose={handleClose}\n      >\n        <StatBar gameStats={gameStats} />\n      </BaseModal>\n    )\n  }\n  return (\n    <BaseModal\n      title={STATISTICS_TITLE}\n      isOpen={isOpen}\n      handleClose={handleClose}\n    >\n      <StatBar gameStats={gameStats} />\n      <h4 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-gray-100\">\n        {GUESS_DISTRIBUTION_TEXT}\n      </h4>\n      <Histogram gameStats={gameStats} />\n  \n\n    </BaseModal>\n  )\n}\n","/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/stats/Histogram.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/stats/StatBar.tsx",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/constants/wordlist.ts",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/constants/validGuesses.ts",[],[],"/Users/AdityaAgarwal/Documents/nerdle/mewP/benesse-int-app/src/components/stats/Progress.tsx",[],[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":21},{"ruleId":"181","severity":1,"message":"185","line":1,"column":23,"nodeType":"183","messageId":"184","endLine":1,"endColumn":31},{"ruleId":"181","severity":1,"message":"186","line":5,"column":3,"nodeType":"183","messageId":"184","endLine":5,"endColumn":15},{"ruleId":"181","severity":1,"message":"187","line":6,"column":3,"nodeType":"183","messageId":"184","endLine":6,"endColumn":10},{"ruleId":"181","severity":1,"message":"188","line":20,"column":3,"nodeType":"183","messageId":"184","endLine":20,"endColumn":22},{"ruleId":"181","severity":1,"message":"189","line":62,"column":10,"nodeType":"183","messageId":"184","endLine":62,"endColumn":29},{"ruleId":"181","severity":1,"message":"190","line":62,"column":31,"nodeType":"183","messageId":"184","endLine":62,"endColumn":53},{"ruleId":"181","severity":1,"message":"191","line":91,"column":36,"nodeType":"183","messageId":"184","endLine":91,"endColumn":63},{"ruleId":"181","severity":1,"message":"192","line":93,"column":32,"nodeType":"183","messageId":"184","endLine":93,"endColumn":57},{"ruleId":"181","severity":1,"message":"193","line":103,"column":9,"nodeType":"183","messageId":"184","endLine":103,"endColumn":23},{"ruleId":"194","severity":1,"message":"195","line":10,"column":20,"nodeType":"196","messageId":"197","endLine":10,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":10,"column":35,"nodeType":"196","messageId":"197","endLine":10,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":10,"column":50,"nodeType":"196","messageId":"197","endLine":10,"endColumn":52},{"ruleId":"194","severity":1,"message":"195","line":10,"column":65,"nodeType":"196","messageId":"197","endLine":10,"endColumn":67},{"ruleId":"194","severity":1,"message":"195","line":10,"column":80,"nodeType":"196","messageId":"197","endLine":10,"endColumn":82},{"ruleId":"194","severity":1,"message":"198","line":14,"column":19,"nodeType":"196","messageId":"197","endLine":14,"endColumn":21},{"ruleId":"199","severity":1,"message":"200","line":21,"column":18,"nodeType":"201","messageId":"197","endLine":21,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":23,"column":15,"nodeType":"196","messageId":"197","endLine":23,"endColumn":17},{"ruleId":"194","severity":1,"message":"198","line":42,"column":24,"nodeType":"196","messageId":"197","endLine":42,"endColumn":26},{"ruleId":"181","severity":1,"message":"202","line":47,"column":8,"nodeType":"183","messageId":"184","endLine":47,"endColumn":14},{"ruleId":"199","severity":1,"message":"200","line":48,"column":19,"nodeType":"201","messageId":"197","endLine":48,"endColumn":23},{"ruleId":"194","severity":1,"message":"195","line":41,"column":69,"nodeType":"196","messageId":"197","endLine":41,"endColumn":71},{"ruleId":"194","severity":1,"message":"195","line":41,"column":85,"nodeType":"196","messageId":"197","endLine":41,"endColumn":87},{"ruleId":"194","severity":1,"message":"195","line":41,"column":101,"nodeType":"196","messageId":"197","endLine":41,"endColumn":103},{"ruleId":"194","severity":1,"message":"195","line":41,"column":117,"nodeType":"196","messageId":"197","endLine":41,"endColumn":119},{"ruleId":"194","severity":1,"message":"195","line":41,"column":133,"nodeType":"196","messageId":"197","endLine":41,"endColumn":135},{"ruleId":"181","severity":1,"message":"203","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":17},{"ruleId":"181","severity":1,"message":"204","line":9,"column":3,"nodeType":"183","messageId":"184","endLine":9,"endColumn":16},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"@typescript-eslint/no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'Suspense' is defined but never used.","'ChartBarIcon' is defined but never used.","'CogIcon' is defined but never used.","'GAME_COPIED_MESSAGE' is defined but never used.","'isSettingsModalOpen' is assigned a value but never used.","'setIsSettingsModalOpen' is assigned a value but never used.","'setIsMissingPreviousLetters' is assigned a value but never used.","'setIsMissingLetterMessage' is assigned a value but never used.","'handleDarkMode' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-eval","eval can be harmful.","CallExpression","'expLen' is assigned a value but never used.","'Countdown' is defined but never used.","'NEW_WORD_TEXT' is defined but never used.","no-global-assign","no-unsafe-negation"]